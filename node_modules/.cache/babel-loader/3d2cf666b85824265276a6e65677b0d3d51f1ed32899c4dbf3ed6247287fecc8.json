{"ast":null,"code":"var _jsxFileName = \"/Users/itaielmoalem/platform-app/client/src/components/CharacterList.tsx\",\n  _s = $RefreshSig$();\n// /src/components/CharacterList.tsx\nimport React, { useState, useEffect } from 'react';\nimport { fetchCharactersWithMultipleActors } from '../api/charactersApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterList = () => {\n  _s();\n  const [charactersData, setCharactersData] = useState({});\n  const {\n    data: moviesPerActor,\n    loading,\n    error\n  } = useCharactersWithMultipleActors();\n  useEffect(() => {\n    const getCharacterData = async () => {\n      const data = await fetchCharactersWithMultipleActors();\n      setCharactersData(data);\n    };\n    getCharacterData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Characters with Multiple Actors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(charactersData).map(character => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: character\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: charactersData[character].map((entry, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [entry.movieName, \" - \", entry.actorName]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, character, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterList, \"sCeOblV1V3T2JK89I16RvIRRXwA=\", true);\n_c = CharacterList;\nexport default CharacterList;\nvar _c;\n$RefreshReg$(_c, \"CharacterList\");","map":{"version":3,"names":["React","useState","useEffect","fetchCharactersWithMultipleActors","jsxDEV","_jsxDEV","CharacterList","_s","charactersData","setCharactersData","data","moviesPerActor","loading","error","useCharactersWithMultipleActors","getCharacterData","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","character","entry","idx","movieName","actorName","_c","$RefreshReg$"],"sources":["/Users/itaielmoalem/platform-app/client/src/components/CharacterList.tsx"],"sourcesContent":["// /src/components/CharacterList.tsx\nimport React, { useState, useEffect } from 'react';\nimport { fetchCharactersWithMultipleActors } from '../api/charactersApi';\n\nconst CharacterList = () => {\n  const [charactersData, setCharactersData] = useState<{ [characterName: string]: { movieName: string; actorName: string }[] }>({});\n  const { data: moviesPerActor, loading, error } = useCharactersWithMultipleActors();\n\n  useEffect(() => {\n    const getCharacterData = async () => {\n      const data = await fetchCharactersWithMultipleActors();\n      setCharactersData(data);\n    };\n    getCharacterData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Characters with Multiple Actors</h1>\n      <ul>\n        {Object.keys(charactersData).map((character) => (\n          <li key={character}>\n            <h2>{character}</h2>\n            <ul>\n              {charactersData[character].map((entry, idx) => (\n                <li key={idx}>\n                  {entry.movieName} - {entry.actorName}\n                </li>\n              ))}\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CharacterList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,iCAAiC,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAA0E,CAAC,CAAC,CAAC;EACjI,MAAM;IAAES,IAAI,EAAEC,cAAc;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGC,+BAA+B,CAAC,CAAC;EAElFZ,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAML,IAAI,GAAG,MAAMP,iCAAiC,CAAC,CAAC;MACtDM,iBAAiB,CAACC,IAAI,CAAC;IACzB,CAAC;IACDK,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCf,OAAA;MAAAW,QAAA,EACGK,MAAM,CAACC,IAAI,CAACd,cAAc,CAAC,CAACe,GAAG,CAAEC,SAAS,iBACzCnB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,EAAKQ;QAAS;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBf,OAAA;UAAAW,QAAA,EACGR,cAAc,CAACgB,SAAS,CAAC,CAACD,GAAG,CAAC,CAACE,KAAK,EAAEC,GAAG,kBACxCrB,OAAA;YAAAW,QAAA,GACGS,KAAK,CAACE,SAAS,EAAC,KAAG,EAACF,KAAK,CAACG,SAAS;UAAA,GAD7BF,GAAG;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GAREI,SAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CA/BID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}